<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
	<!-- 
		%d, %date : 해당 로그가 발생한 시간
		%p, %level : 로그 레벨
		%n : 줄바꿈
		%t, %thread : 해당 로그가 발생한 스레드명
	 -->
	<Properties>
<!-- 		<Property name="PATTERN">%d %5p [%c] %m%n</Property> -->
        <Property name="LOG_DATEFORMAT_PATTERN">{yyyy-MM-dd HH:mm:ss.SSS}</Property>
        <Property name="LOG_LEVEL_PATTERN">%5p [%13.15t] {%-40.40C{1.}}: %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}</Property>
	</Properties>


	<Appenders>
		<Console name="console" target="SYSTEM_OUT" follow="true">
 			<PatternLayout disableAnsi="false" pattern="%d${LOG_DATEFORMAT_PATTERN} ${LOG_LEVEL_PATTERN}"/>
		</Console>
	</Appenders>
	
	<Loggers>
	
		<!--========== Application Loggers ==========-->
		<Logger name="egovframework" level="DEBUG" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<Logger name="org.springframework" level="INFO" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!-- <Logger name="java.sql" level="DEBUG" additivity="false">
			<AppenderRef ref="console" />
		</Logger> -->
		
		<!--========== SQL Logger ==========-->
		
		<!-- 열려있는 모든 번호와 연결 수립 및 해제 이벤트를 기록. 이는 연결 문제를 찾아내는데 매우 유용 (Connection Pool 설정) -->
		<logger name="jdbc.connection" level="INFO" additivity="false">
			<AppenderRef ref="console" />
		</logger>
		
		<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
		<Logger name="jdbc.audit" level="WARN" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
		<Logger name="jdbc.resultset" level="WARN" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. (원래는 ? 로 표시되는데, log4j 덕분에 완전한 쿼리로 보여지는 것임) -->
		<Logger name="jdbc.sqlonly" level="INFO" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
		<Logger name="jdbc.resultsettable" level="DEBUG" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
		<Logger name="jdbc.sqltiming" level="WARN" additivity="false">
			<AppenderRef ref="console" />
		</Logger>
		
		<!--========== Root Logger ==========-->
		<Root level="DEBUG">
			<AppenderRef ref="console" />
		</Root>
		
	</Loggers>
</Configuration>